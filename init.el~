;;
;; Initial Emacs load file
;;

;; Add the given path to the load-path variable.
(defun add-to-load-path (path-string)
  (message (format "Passed %S..." path-string))
  (if (stringp path-string)
      (when (file-exists-p path-string)
	(message (format "Adding %S to load-path..." path-string))
	(add-to-list 'load-path (expand-file-name path-string)))
    (crs-add-to-load-path (car path-string))
    (if (cdr path-string)
        (crs-add-to-load-path (cdr path-string)))))

(add-to-load-path (expand-file-name "~/.emacs.d/lisp"))
;(add-to-load-path (expand-file-name "/usr/share/xemacs/xemacs-packages/lisp/python-modes"))
(add-to-list 'load-path "/usr/share/doc/git-1.8.3.1/contrib/emacs")

(setq backup-directory-alist `(("." . "~/.emacs.d/saves")))


;; Mercurial mode files. We have them in our repository, but:
;;   - mercurial.el is distributed with Mercurial.
;;   - ahg.el is from https://bitbucket.org/agriggio/ahg/
;;(require 'mercurial)
;;(require 'ahg)

(ido-mode t)
(font-lock-mode)
;;(pc-selection-mode)
(delete-selection-mode)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(bell-volume 0)
 '(blink-cursor-mode nil)
 '(blink-matching-paren t)
 '(c-delete-function (quote save-buffer))
 '(compilation-scroll-output t)
 '(custom-safe-themes (quote ("6681de186eee89fd73fee50398d6e9d2d1f275c6c4b6ad841e554f4aa1914ba4" "b06832c3dcbfcb94236ba2caeffb5c87a016a54876e540a06acb3c58e0cc9eb4" default)))
 '(efs-use-passive-mode t)
 '(font-lock-maximum-size 400000)
 '(gc-cons-threshold 20000000)
 '(global-font-lock-mode t nil (font-lock))
 '(indent-tabs-mode nil)
 '(load-home-init-file t t)
 '(safe-local-variable-values (quote ((ff-search-directories "include"))))
 '(standard-indent 4)
 '(truncate-lines t)
 '(truncate-partial-width-windows t))

;; Make Emacs split horizontally by default (i.e when doing grep/completion/C-h b)
(setq split-height-threshold nil)
(setq split-width-threshold nil)

;; Turn off bell alarms
(setq ring-bell-function 'ignore)


(setq path-to-ctags "/usr/bin/ctags")

(defun create-tags (dir-name)
    "Create tags file."
    (interactive "DDirectory: ")
    (shell-command
     (format "%s -f %s/TAGS -e -R %s" path-to-ctags dir-name (directory-file-name dir-name)))
  )

;; python mode
(setq auto-mode-alist (cons '("\\.py$" . python-mode) auto-mode-alist))
(setq interpreter-mode-alist (cons '("python" . python-mode)
interpreter-mode-alist))
(autoload 'python-mode "python-mode" "Python editing mode." t)

;; (global-font-lock-mode t)
;; (setq font-lock-maximum-decoration t)

(setq-default indent-tabs-mode nil)
(setq default-tab-width 4)

;(require 'pymacs)
;(pymacs-load "ropemacs" "rope-")
;(setq ropemacs-enable-autoimport t)


;; (add-to-list 'load-path "~/.emacs.d/auto-complete-1.3")
;; (require 'auto-complete-config)
;; (add-to-list 'ac-dictionary-directories "~/.emacs.d/vendor/auto-complete-1.2/dict")
;; (ac-config-default)

;; (require 'yasnippet-bundle)

(require 'package)
(add-to-list 'package-archives
             '("melpa" . "http://melpa.milkbox.net/packages/") t)

(require 'settings)
(require 'marks)
(defvaralias 'python-mode-map 'py-mode-map)
(require 'python-mode)
(require 'ido)
(require 'pc-select)
(require 'quick-yes)
(require 'newshell)
;;(require 'lua-mode0)
;;(require 'magit)
(require 'internet-search)
;;(require 'xcscope)
(require 'git)
(require 'git-blame)
(require 'vc-git)

;; Load keys the last, in order to override bad key bindings
;;;(add-to-list 'load-path "~/el-get/el-get")
;;;(unless (require 'el-get nil 'noerror)
;;;  (require 'package)
;;;  (add-to-list 'package-archives
;;;               '("melpa" . "http://melpa.org/packages/"))
;;;  (package-refresh-contents)
;;;  (package-initialize)
;;;  (package-install 'el-get)
;;;  (require 'el-get))

;;;(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")
;;;(el-get 'sync)

(set-cursor-color "#ffffff") 

;; Show trailing whitespace
(add-hook 'prog-mode-hook (lambda () (setq show-trailing-whitespace t)))
;(defun my-pymacs-saver ()
;  (if (equal (buffer-name) "*Pymacs*")
;      (yes-or-no-p "Really kill *Pymacs* buffer? ")
;    t))

(autoload 'jedi:setup "jedi" nil t)
(add-hook 'python-mode-hook 'jedi:setup)
(setq jedi:complete-on-dot t)      

;(add-hook 'kill-buffer-query-functions 'my-pymacs-saver)
;; Linux-style indentation
(defun my-c-mode-hook ()
  (setq c-indent-level 8)
  (setq c-brace-imaginary-offset 0)
  (setq c-basic-offset 8)
  (setq c-brace-offset -8)
  (setq c-argdecl-indent 8)
  (setq c-label-offset -8)
  (setq c-continued-statement-offset 8)
  (setq indent-tabs-mode t)
  (local-set-key [return] 'newline-and-indent)
  (setq tab-width 8))
(add-hook 'c-mode-hook 'my-c-mode-hook)

(add-hook 'after-init-hook #'global-flycheck-mode)

(add-hook 'after-init-hook #'drag-stuff-global-mode)
(add-hook 'python-mode-hook 'py-autopep8-enable-on-save)
(setq py-autopep8-options '("--max-line-length=145"))
(defun my-find-file-check-make-large-file-read-only-hook ()
  "If a file is over a given size, make the buffer read only."
  (when (> (buffer-size) (* 1024 1024))
    (setq buffer-read-only t)
    (buffer-disable-undo)
    (fundamental-mode)))

(add-hook 'find-file-hook 'my-find-file-check-make-large-file-read-only-hook)
(add-to-list 'custom-theme-load-path "~/.emacs.d/elpa/material-theme-20160302.1334")
(load-theme 'material)
(autoload 'bash-completion-dynamic-complete 
  "bash-completion"
  "BASH completion hook")
(add-hook 'shell-dynamic-complete-functions
  'bash-completion-dynamic-complete)
;; (add-hook 'find-file-hook 'flymake-find-file-hook)
;; (when (load "flymake" t)
;; (defun flymake-pyflakes-init ()
;; (let* ((temp-file (flymake-init-create-temp-buffer-copy
;; 'flymake-create-temp-inplace))
;; (local-file (file-relative-name temp-file
;; (file-name-directory buffer-file-name))))
;; (list "pycheckers"  (list local-file))))
;; (add-to-list 'flymake-allowed-file-name-masks
;; '("\\.py\\'" flymake-pyflakes-init)))
;; (load-library "flymake-cursor")
;; (global-set-key [f10] 'flymake-goto-prev-error)
;; (global-set-key [f11] 'flymake-goto-next-error)
(add-to-list 'load-path "/home/arie/.emacs.d/golang")
(require 'go-mode-autoloads)
(require 'keys)
(setq ipython-command "/usr/local/bin/ipython")
(progn
  (menu-bar-mode -1)
  (when (fboundp 'tool-bar-mode)
    (tool-bar-mode -1))
  (when (fboundp 'scroll-bar-mode)
    (scroll-bar-mode -1))
  (require 'saveplace)
  (setq-default save-place t))

(setq visible-bell t
      load-prefer-newer t
      ediff-window-setup-function 'ediff-setup-windows-plain
      save-place-file (concat user-emacs-directory "places")
      backup-directory-alist `(("." . ,(concat user-emacs-directory
                                                 "backups"))))
(require 'ipython)
(global-linum-mode t) ;; enable line numbers globally
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:foreground "White" :background "black" :size "14t"))))
 '(font-lock-comment-face ((t (:foreground "gray"))))
 '(font-lock-doc-string-face ((t (:foreground "cyan"))))
 '(font-lock-function-name-face ((t (:foreground "forestgreen" :bold t))))
 '(font-lock-keyword-face ((t (:foreground "orange"))))
 '(font-lock-preprocessor-face ((t (:foreground "deepskyblue" :bold t))))
 '(font-lock-reference-face ((t (:foreground "orangered"))))
 '(font-lock-string-face ((t (:foreground "cyan"))))
 '(font-lock-type-face ((t (:foreground "green3" :bold t))))
 '(font-lock-variable-name-face ((t (:foreground "gold" :bold t))))
 '(font-lock-warning-face ((t (:foreground "yellow" :bold t))))
 '(highlight ((t (:foreground "red3" :background "white"))))
 '(isearch ((t (:foreground "red" :background "lightslategray"))))
 '(lazy-highlight ((t (:foreground "red"))))
 '(region ((t (:background "skyblue4"))))
 '(text-cursor ((t (:foreground "white" :background "red"))) t))

